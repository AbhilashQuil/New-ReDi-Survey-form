export default Report;
export type Options = {
    readOnly?: boolean;
    noAlerts?: boolean;
    i18n?: object;
    template?: string;
    projectEndpoint?: string;
};
export type ReportProps = {
    src?: string;
    projectEndpoint?: string;
    report?: object;
    options?: Options;
    onFormLoad?: Function;
    onError?: Function;
    onRender?: Function;
    onFocus?: Function;
    onBlur?: Function;
    onInitialized?: Function;
    onReportReady?: Function;
    onChange?: Function;
    onRowClick?: Function;
    onRowSelectChange?: Function;
    onFetchDataError?: Function;
    onChangeItemsPerPage?: Function;
    /**
     * u
     */
    onPage?: Function;
};
/**
 * @param {ReportProps} props
 * @returns {JSX.Element}s
 */
declare function Report(props: ReportProps): JSX.Element;
declare namespace Report {
    namespace propTypes {
        let src: any;
        let projectEndpoint: any;
        let report: any;
        let options: any;
        let onRowClick: any;
        let onRowSelectChange: any;
        let onFetchDataError: any;
        let onChangeItemsPerPage: any;
        let onPage: any;
        let onChange: any;
        let onFormLoad: any;
        let onError: any;
        let onRender: any;
        let onFocus: any;
        let onBlur: any;
        let onInitialized: any;
        let onReportReady: any;
    }
    function getDefaultEmitter(): EventEmitter;
}
import EventEmitter from 'eventemitter2';
//# sourceMappingURL=Report.d.ts.map